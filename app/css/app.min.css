a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}*{outline:0;-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:"Open Sans",sans-serif;font-size:1rem;line-height:1.75rem;color:#7a7a7a}h1{margin:35px 0}h2{margin:20px 0}p{margin:15px 0}a{text-decoration:none}.for-img{text-align:center}.for-img img{max-width:100%;max-height:100%;height:auto}.cover-img{position:relative;overflow:hidden}.cover-img:before{display:block;content:""}.cover-img .image{position:absolute;top:0;left:0;min-width:100%;min-height:100%;max-width:100%;-o-object-fit:cover;object-fit:cover}.wrapper{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%;max-width:1920px;min-height:100vh;background:#fff;overflow:hidden}.container{position:relative;width:100%;max-width:1200px;margin:0 auto;padding:0 20px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
